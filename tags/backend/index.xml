<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Backend - 標籤 - 菠菜眾長</title><link>https://lruihao.cn/tags/backend/</link><description>Backend - 標籤 - 菠菜眾長</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>1024@lruihao.cn (Lruihao)</managingEditor><webMaster>1024@lruihao.cn (Lruihao)</webMaster><lastBuildDate>Sat, 25 Jul 2020 20:51:11 +0000</lastBuildDate><atom:link href="https://lruihao.cn/tags/backend/" rel="self" type="application/rss+xml"/><item><title>cell-blog 功能介绍与安装</title><link>https://lruihao.cn/posts/cell-blog-install/</link><pubDate>Sat, 25 Jul 2020 20:51:11 +0000</pubDate><author>作者</author><guid>https://lruihao.cn/posts/cell-blog-install/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://i.loli.net/2020/05/11/vHeNRG4Qi7ljrM8.png" referrerpolicy="no-referrer">
            </div><blockquote>
<p>基于Laravel7开发，Markdown语法的个人独立博客。<a href="https://github.com/Lruihao/cell-blog" target="_blank" rel="noopener noreffer">Cell Blog</a>,也是我的毕业设计作品，目前已開源。</p>
</blockquote>]]></description></item><item><title>cell-blog 开发记录</title><link>https://lruihao.cn/posts/cell-blog-dev/</link><pubDate>Sat, 25 Jul 2020 20:42:42 +0000</pubDate><author>作者</author><guid>https://lruihao.cn/posts/cell-blog-dev/</guid><description><![CDATA[<blockquote>
<p>Cell Blog 开发记录，<a href="https://github.com/Lruihao/cell-blog" target="_blank" rel="noopener noreffer">项目地址</a></p>
</blockquote>]]></description></item><item><title>使用Python刷csdn访问量</title><link>https://lruihao.cn/posts/csdnvisiter/</link><pubDate>Thu, 26 Mar 2020 11:08:38 +0000</pubDate><author>作者</author><guid>https://lruihao.cn/posts/csdnvisiter/</guid><description>&lt;blockquote>
&lt;p>使用python模拟浏览器行为刷csdn访问量，脚本仅做学习，请勿滥用~&lt;/p>
&lt;/blockquote></description></item><item><title>新冠疫情未返校未返工第N天之“自动打卡”</title><link>https://lruihao.cn/posts/daka/</link><pubDate>Wed, 25 Mar 2020 08:22:42 +0000</pubDate><author>作者</author><guid>https://lruihao.cn/posts/daka/</guid><description><![CDATA[<div class="featured-image">
                <img src="/posts/daka/images/result.png" referrerpolicy="no-referrer">
            </div><div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw"></i>信息<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>这件事还得从一只蝙蝠说起&hellip;<br>
算了，昨天下午3点半，我还在王者峡谷Timing,突然潇X巴哥打了个电话给我说关于自动打卡的想法&hellip;<br>
哎，反正就是由于疫情需要每天健康打卡汇报给学校，然后每天提交一样的太麻烦了，就想写个程序自动打卡&hellip;<br>
我和潇X巴哥确定思路后兵分两路：</p>
<ol>
<li>他用java写个后台自动刷多人的，再弄个网页给用户填写账号密码保存在数据库；</li>
<li>我想的就很直接，只刷一个人的，python 模拟浏览器登录后打卡，再设置定时任务（多人则设定多个）；</li>
</ol>
</div>
        </div>
    </div>]]></description></item><item><title>java 通过 URL 和 URLConnection 访问网页资源</title><link>https://lruihao.cn/posts/urlreader/</link><pubDate>Mon, 06 May 2019 17:41:35 +0000</pubDate><author>作者</author><guid>https://lruihao.cn/posts/urlreader/</guid><description>&lt;blockquote>
&lt;p>该例中首先生成一个URL对象lrh，指向RUI豪小栈，然后再调用lrh.openStream()方法生成该URL的一个输入流，这是一个字节流，在此基础上进一步通过InputStreamReader和BufferedReader构造一个带缓冲功能的字符流，并通过这个字符流对象读取该URL的html内容，进而输出到桌面文件和控制台屏幕。URLConnection类也可以用来对由URL引用的资源进行读写操作，前提是先通过connect()方法建立连接，然后再去获取响应头信息或响应内容。&lt;/p>
&lt;/blockquote></description></item><item><title>文件加密解密（字节流）</title><link>https://lruihao.cn/posts/byteio/</link><pubDate>Thu, 02 May 2019 23:04:32 +0000</pubDate><author>作者</author><guid>https://lruihao.cn/posts/byteio/</guid><description><![CDATA[<blockquote>
<p>基本功能： 给定一个密钥，读取文件内容，加密后，输出到另外一个文件。<br/><br/>
这里使用文件输入流读取文件内容，然后每个字节和密码进行异或简单加密。加密完成，使用文件输出流写入另一个文件中。解密和加密方法一样。利用的是对同一个数异或两遍其值不变的性质。因此一个程序可以完成加密和解密功能。只需修改文件名即可。</p>
</blockquote>]]></description></item><item><title>用记事本编写第一个java程序</title><link>https://lruihao.cn/posts/hellojava/</link><pubDate>Fri, 19 Apr 2019 19:49:54 +0000</pubDate><author>作者</author><guid>https://lruihao.cn/posts/hellojava/</guid><description><![CDATA[<blockquote>
<p>之所以用记事本来写不是为了装X或者什么的。反而恰恰是返璞归真，因为在用java语言进行程序开发时，首先是以纯文本的方式编写所有的java源程序，并保存成以<code>.java</code>为后缀的文件；然后将这些源程序用<code>javac</code>编译成<code>.class</code>后缀名的字节代码文件；字节代码不是被本地处理器执行的代码，而是能够被java虚拟机（JVM）执行的代码。最后用java运行工具在JVM执行java应用程序。<br>
由于JVM可以运行在不同的操作系统上，因此同一个字节代码文件可以跨平台运行。</p>
</blockquote>
<ul>
<li>javac</li>
<li>java</li>
</ul>]]></description></item><item><title>GitBook 使用教程</title><link>https://lruihao.cn/posts/gitbookuse/</link><pubDate>Thu, 04 Apr 2019 22:09:44 +0000</pubDate><author>作者</author><guid>https://lruihao.cn/posts/gitbookuse/</guid><description>&lt;blockquote>
&lt;p>想趴几本金庸小说的做成电子书自己阅读，在博客上尝试了一下整理了6本中短篇小说就开始感觉博客臃肿，于是找到gitbook前来一试。
写完这篇文章开始实际操作，我发现还不如用hexo来写小说，遂放弃！Gitbook用来写相关文档介绍还差不多。&lt;/p>
&lt;/blockquote></description></item><item><title>java 泛型 test</title><link>https://lruihao.cn/posts/fanxing/</link><pubDate>Sat, 16 Mar 2019 13:56:01 +0000</pubDate><author>作者</author><guid>https://lruihao.cn/posts/fanxing/</guid><description><![CDATA[<blockquote>
<ul>
<li>泛型方法，它在修饰符后，返回值类型前增加了类型参数(&lt;&gt;)</li>
<li>类型通配符一般使用问号<code>?</code>代替具体的类型<code>实</code>参，注意不是类型形参。</li>
</ul>
</blockquote>]]></description></item><item><title>Arrays类及基本使用</title><link>https://lruihao.cn/posts/arrays/</link><pubDate>Fri, 18 Jan 2019 13:13:10 +0000</pubDate><author>作者</author><guid>https://lruihao.cn/posts/arrays/</guid><description><![CDATA[<h3 id="主要方法">主要方法</h3>
<ul>
<li>static type[] copyof(type[] original,int length)</li>
<li>static int binarysearch(type[] a,type key)</li>
<li>static boolean equals(type[] a,type[] b)</li>
<li>static void fill(type[] a,type val)</li>
<li>static void fill(type[] a,int fromindex,int toindex,type val)</li>
<li>static void sort(type[] a)</li>
</ul>]]></description></item></channel></rss>