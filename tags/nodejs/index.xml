<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Nodejs - 標籤 - 菠菜眾長</title><link>https://lruihao.cn/tags/nodejs/</link><description>Nodejs - 標籤 - 菠菜眾長</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>1024@lruihao.cn (Lruihao)</managingEditor><webMaster>1024@lruihao.cn (Lruihao)</webMaster><lastBuildDate>Thu, 04 Apr 2019 22:09:44 +0000</lastBuildDate><atom:link href="https://lruihao.cn/tags/nodejs/" rel="self" type="application/rss+xml"/><item><title>GitBook 使用教程</title><link>https://lruihao.cn/posts/gitbookuse/</link><pubDate>Thu, 04 Apr 2019 22:09:44 +0000</pubDate><author>Lruihao</author><guid>https://lruihao.cn/posts/gitbookuse/</guid><description><![CDATA[<blockquote>
<p>想趴几本金庸小说的做成电子书自己阅读，在博客上尝试了一下整理了6本中短篇小说就开始感觉博客臃肿，于是找到gitbook前来一试。
写完这篇文章开始实际操作，我发现还不如用hexo来写小说，遂放弃！Gitbook用来写相关文档介绍还差不多。</p>
</blockquote>
<h1 id="gitbook简介">GitBook简介</h1>
<ul>
<li><a href="https://www.gitbook.com" target="_blank" rel="noopener noreffer">GitBook官网</a></li>
<li><a href="https://github.com/GitbookIO/gitbook" target="_blank" rel="noopener noreffer">GitBook文档</a></li>
</ul>
<blockquote>
<p>Gitbook的作用和Hexo有点像，也是把md渲染成html,也见到有人用这个来写博客的。<br>
GitBook是一个基于 Node.js 的命令行工具，可使用 Github/Git 和 Markdown 来制作精美的电子书，GitBook 并非关于 Git 的教程。<br>
GitBook支持输出多种文档格式：</p>
</blockquote>
<ul>
<li>静态站点：GitBook默认输出该种格式，生成的静态站点可直接托管搭载Github Pages服务上；</li>
<li>PDF：需要安装gitbook-pdf依赖；</li>
<li>eBook：需要安装ebook-convert；</li>
<li>单HTML网页：支持将内容输出为单页的HTML，不过一般用在将电子书格式转换为PDF或eBook的中间过程；</li>
<li>JSON：一般用于电子书的调试或元数据提取。
使用GitBook制作电子书，必备两个文件：<code>README.md</code>和<code>SUMMARY.md</code></li>
</ul>
<h1 id="gitbook安装步骤">GitBook安装步骤</h1>
<h2 id="安装nodejs">安装node.js</h2>
<p>GitBook是一个基于Node.js的命令行工具，下载安装<a href="https://nodejs.org" target="_blank" rel="noopener noreffer">Node.js</a>(我以前搭建hexo的文章里也有介绍)，安装完成之后，你可以使用下面的命令来检验是否安装成功。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">node -v
</code></pre></td></tr></table>
</div>
</div><h2 id="安装gitbook">安装GitBook</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">npm install gitbook-cli -g
</code></pre></td></tr></table>
</div>
</div><p>检验是否安装成功</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">gitbook -V
</code></pre></td></tr></table>
</div>
</div><p><a href="https://github.com/GitbookIO/gitbook/blob/master/docs/setup.md" target="_blank" rel="noopener noreffer">参照GitBook安装文档</a></p>
<h2 id="gitbook初始化">gitbook初始化</h2>
<p>和<code>hexo init</code>类似，GitBook准备工作做好之后，我们进入一个你要写书的目录（比如新建mybook文件夹），输入如下命令初始化</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">gitbook init
</code></pre></td></tr></table>
</div>
</div><p>初始化后可以看到他会创建<code>README.md</code>和<code>SUMMARY.md</code>  这两个文件，README.md应该不陌生，就是说明文档，而SUMMARY.md其实就是书的章节目录，其默认内容如下所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"># Summary

* [Introduction](README.md)
</code></pre></td></tr></table>
</div>
</div><h2 id="启动服务器">启动服务器</h2>
<p>和<code>hexo serve</code>类似，我们使用<code>gitbook serve</code>命令，然后在浏览器地址栏中输入侧http://localhost:4000便可预览书籍。<br>
运行该命令后会在书籍的文件夹中生成一个_book文件夹，里面的内容即为生成的html文件。<br>
也可以修改端口</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">gitbook serve --port <span class="m">5000</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>我们可以使用<code>gitbook build</code>命令来生成网页而不开启服务器。这个类似于 hexo 的<code>hexo g</code>命令。<br>
当然，build 命令可以指定路径：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">gitbook build <span class="o">[</span>书籍路径<span class="o">]</span> <span class="o">[</span>输出路径<span class="o">]</span>
</code></pre></td></tr></table>
</div>
</div><p>你还可以生成 PDF,epub,mobi 格式的电子书：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">gitbook pdf ./ ./mybook.pdf
gitbook epub ./ ./mybook.epub
gitbook mobi ./ ./mybook.mobi
</code></pre></td></tr></table>
</div>
</div><p>如果生成不了，你可能还需要安装一些工具，比如 ebook-convert。或者在 Typora 中安装 Pandoc 进行导出。</p>
<h1 id="目录结构">目录结构</h1>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">.
├── book.json
├── README.md
├── SUMMARY.md
├── chapter-1/
|   ├── README.md
|   └── something.md
└── chapter-2/
    ├── README.md
    └── something.md
</code></pre></td></tr></table>
</div>
</div><h2 id="bookjson">book.json</h2>
<p>该文件主要用来存放配置信息。</p>
<h2 id="summarymd">SUMMARY.md</h2>
<p>这个文件主要决定GitBook的章节目录，它通过Markdown中的列表语法来表示文件的父子关系。</p>
<h2 id="更多">更多</h2>
<p><a href="https://www.jianshu.com/p/421cc442f06c" target="_blank" rel="noopener noreffer">更多详情介绍</a></p>]]></description></item><item><title>hexo 博客源码备份</title><link>https://lruihao.cn/posts/blog-backup/</link><pubDate>Sat, 03 Nov 2018 12:49:28 +0000</pubDate><author>Lruihao</author><guid>https://lruihao.cn/posts/blog-backup/</guid><description><![CDATA[<div class="featured-image">
                <img src="/posts/blog-backup/images/1.png" referrerpolicy="no-referrer">
            </div><h3 id="备份hexo博客">备份hexo博客</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">//如果themes/next(主题文件)下面有.git，请删除这个.git文件夹。
cd hexo
git init  //初始化本地仓库
git add source themes scaffolds _config.yml package.json package-lock.json  //将必要的文件依次添加
git commit -m &#34;blog hexo&#34;
git branch hexo  //新建hexo分支
git checkout hexo  //切换到hexo分支上
git remote add origin git@github.com:username/username.github.io.git  //将本地与Github项目对接
git push origin hexo  //push到Github项目的hexo分支上
</code></pre></td></tr></table>
</div>
</div><h3 id="在其他终端克隆和更新hexo博客">在其他终端克隆和更新hexo博客</h3>
<blockquote>
<p>nodejs,git,hexo已经安装好,即搭建完成</p>
</blockquote>
<h4 id="克隆hexo博客备份">克隆hexo博客备份</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">git clone -b hexo git@github.com:username/username.github.io.git  //将Github中hexo分支clone到本地
cd user.github.io
npm install  //注意，这里一定要切换到刚刚clone的文件夹内执行，安装必要的所需组件，不用再init
</code></pre></td></tr></table>
</div>
</div><p>这样我们的备份文件就会原封不动的拷贝到本地。</p>
<h4 id="写新文章并备份和部署备用操作">写新文章并备份和部署（备用操作）</h4>
<blockquote>
<p>其实源码拷下来了，这步不做我们也知道怎么做了，完全没必要按照教程死搬硬套。灵活一点就行了。</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">//进入username.github.io文件夹,应是hexo分支
git pull origin hexo //本地和远端的融合
hexo new post &#34;new post name&#34;  //写新文章
git add source
git commit -m &#34;xxx&#34;
git push origin hexo  //备份
hexo d -g  //部署
</code></pre></td></tr></table>
</div>
</div><p><a href="https://blog.csdn.net/Monkey_LZL/article/details/60870891" target="_blank" rel="noopener noreffer">参考</a></p>
]]></description></item><item><title>termux基本使用教程</title><link>https://lruihao.cn/posts/termux1/</link><pubDate>Tue, 23 Oct 2018 22:16:02 +0000</pubDate><author>Lruihao</author><guid>https://lruihao.cn/posts/termux1/</guid><description><![CDATA[<blockquote>
<p>前面有一篇文章写到一些,<a href="https://lruihao.cn/posts/termux/" target="_blank" rel="noopener noreffer">在 Android 上搭建 hexo 博客</a>
<strong>本文当初摘要自<a href="https://www.sqlsec.com/2018/05/termux.html?yyue=a21bo.50862.201879" target="_blank" rel="noopener noreffer">国光个人博客</a></strong>
如若作者博客IP被墙，可前往国光第三方博客诸如csdn等。<a href="https://www.freebuf.com/geek/170510.html" target="_blank" rel="noopener noreffer">备用</a></p>
</blockquote>
<h3 id="初始化">初始化</h3>
<p>下载并初始化termux</p>
<h4 id="安装vim">安装vim</h4>
<p>安装编辑器vim</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pkg install vim
</code></pre></td></tr></table>
</div>
</div><h4 id="解决中文乱码问题">解决中文乱码问题</h4>
<p>在home目录下, 新建.vimrc文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">vim .vimrc
</code></pre></td></tr></table>
</div>
</div><p>添加内容如下:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">set fileencodings=utf-8,gb2312,gb18030,gbk,ucs-bom,cp936,latin1
set enc=utf8
set fencs=utf8,gbk,gb2312,gb18030
</code></pre></td></tr></table>
</div>
</div><p>然后source下变量:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">source .vimrc
</code></pre></td></tr></table>
</div>
</div><h4 id="修改启动问候语">修改启动问候语</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">vim $PREFIX/etc/motd
</code></pre></td></tr></table>
</div>
</div><p>按i然后编辑，比如</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">		www.lruihao.cn
		    李瑞豪
</code></pre></td></tr></table>
</div>
</div><p>Esc然后：wq退出</p>
<h4 id="管理员权限">管理员权限</h4>
<p>手机已经 root,安装tsu, 这是一个su的 termux 版本, 用来在 termux 上替代su:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pkg install tsu
</code></pre></td></tr></table>
</div>
</div><p>然后终端下面输入:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">tsu
</code></pre></td></tr></table>
</div>
</div><p>即可切换root用户, 这个时候会弹出root授权提示。在管理员身份下，输入exit可回到普通用户身份。</p>
<h3 id="美化">美化</h3>
<p><a href="https://github.com/Cabbagec/termux-ohmyzsh" target="_blank" rel="noopener noreffer">Termux-ohmyzsh</a></p>
<p>作用 ： 美化之外，主要使用了zsh来替代bash作为默认shell。使用一键安装脚本来安装, 一步到位, 顺便启动了外置存储, 可以直接访问 SD 卡下的目录，创建软文件夹。</p>
<h4 id="使用">使用</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">sh -c &#34;$(curl -fsSL https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh)&#34;
</code></pre></td></tr></table>
</div>
</div><h4 id="设置色彩样式">设置色彩样式：</h4>
<p>运行chcolor更换色彩样式，或者：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">~/.termux/colors.sh
</code></pre></td></tr></table>
</div>
</div><h4 id="设置字体">设置字体</h4>
<p>运行chfont更换字体，或者：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">~/.termux/fonts.sh
</code></pre></td></tr></table>
</div>
</div><h4 id="需要软件包">需要软件包：</h4>
<ul>
<li>curl</li>
</ul>
<h3 id="访问外置存储">访问外置存储</h3>
<p>执行过上面的zsh一键配置脚本后, 并且授予文件访问权限的话, 会在家目录生成storage目录，并且生成若干目录，软连接都指向外置存储卡的相应目录<br>
可以让从外置储存复制文件进system分区</p>
<h4 id="创建-qq-文件夹软连接">创建 QQ 文件夹软连接</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">ln -s /data/data/com.termux/files/home/storage/shared/tencent/QQfile_recv QQ
</code></pre></td></tr></table>
</div>
</div><h4 id="创建blog2文件夹软连接备份文件">创建blog2文件夹软连接备份文件</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">ln -s /data/data/com.termux/files/home/storage/shared/blog2 blog2
</code></pre></td></tr></table>
</div>
</div><h3 id="安装hexo">安装hexo</h3>
<h4 id="安装准备">安装准备</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pkg install nodejs
pkg install git
npm install hexo-cli -g
npm install hexo-deployer-git --save
pkg install openssh
</code></pre></td></tr></table>
</div>
</div><h4 id="初始化hexo">初始化hexo</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">hexo init blog
cd blog
hexo g
hexo s
</code></pre></td></tr></table>
</div>
</div><p>浏览器输入<code>127.0.0.1:4000</code>查看效果</p>
<h4 id="链接githubcodinggitee等远程仓库">链接github,coding,gitee等远程仓库</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">ssh-keygen -t rsa -C &#34;your_email@example.com&#34;
#这将按照你提供的邮箱地址，创建一对密钥(个人喜欢一路回车)
</code></pre></td></tr></table>
</div>
</div><p>找到<code>~/.ssh/id_rsa.pub</code>这个文件复制里面的内容，到对应的平台生成SSH公钥</p>
<h4 id="设置用户信息">设置用户信息</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">git config --global user.name &#34;lruihao&#34;
git config --global user.email  &#34;1074627678@qq.com&#34;
</code></pre></td></tr></table>
</div>
</div><h4 id="测试链接">测试链接</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">ssh -T git@github.com  #github
ssh -T git@coding.net   #coding
ssh -T git@gitee.com   #gitee
</code></pre></td></tr></table>
</div>
</div><p><strong>注意#注释部分不要的</strong></p>
<h4 id="站点配置文件">站点配置文件</h4>
<p>打开站点配置文件填写代码库</p>
<p>例如我的</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">deploy:
- type: git
  repository:
    github: git@github.com:Lruihao/Lruihao.github.io.git,master
    coding: git@git.coding.net:liruihao/liruihao.git,master
  #message: &#34;日常更新&#34;
</code></pre></td></tr></table>
</div>
</div><h4 id="部署">部署</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">hexo clean
hexo g -d
</code></pre></td></tr></table>
</div>
</div><p>没出错就可以正常通过相应域名访问了。
<a href="https://lruihao.github.io" target="_blank" rel="noopener noreffer">https://lruihao.github.io</a>
<a href="https://liruihao.coding.me" target="_blank" rel="noopener noreffer">https://liruihao.coding.me</a>
<a href="https://lruihao.gitee.io" target="_blank" rel="noopener noreffer">https://lruihao.gitee.io</a> <strong>//手机hexo效果展示</strong></p>
<h3 id="ssh连接电脑或者服务器">ssh连接电脑或者服务器</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">ssh root@118.24.217.167
</code></pre></td></tr></table>
</div>
</div><p>会提示输入密码，linux下输入密码是看不到的，大家都知道，小心点别输入错误。<br>
之后就可以手机操作服务器了。</p>
<h3 id="解决-npm-安装报错未验证">解决 npm 安装报错（未验证）</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">vim $PREFIX/lib/node_modules/npm/node_modules/worker-farm/lib/farm.js
</code></pre></td></tr></table>
</div>
</div><p>把里面的 length改成4，我默认的是1。</p>
<h3 id="nyancat-彩虹猫">nyancat 彩虹猫</h3>
<p>彩虹貓（英语：Nyan Cat）是在 2011 年 4 月上传在 Youtube 的视频，并且迅速爆红于网络，並在 2011 年 YouTube 浏览量最高的视频中排名第五.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">pkg install nyancat
nyancat
</code></pre></td></tr></table>
</div>
</div><blockquote>
<p>还有更多姿势这里就不写了，只写一下日常用到的，就这样OK睡觉！</p>
</blockquote>
<h3 id="termux更多常用有趣命令适用于linux">termux更多常用有趣命令（适用于linux）</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">vim $PREFIX/etc/motd
chcolor
chfont
~/.termux/colors.sh
~/.termux/fonts.sh

echo &#34;https://www.lruihao.cn&#34; |curl -F-=\&lt;- qrenco.de

pkg install nyancat
nyancat
pkg install sl
sl
pkg install figlet
figlet hello
pkg install toilet
toilet hello
toilet -f mono12 -F gay &#34;hello&#34;
pkg cowsay
cowsay &#34;hello&#34;
pkg install cmatrix
cmatrix
pkg install w3m
w3m www.lruihao.cn
</code></pre></td></tr></table>
</div>
</div><pre><code>cmatrix常用命令如下:
cmatrix-a :异步滚动（默认）
cmatrix-b :随机粗体
cmatrix-B :全部粗体
cmatrix-o :使用旧风格滚动
cmatrix-x :X window 模式
cmatrix-V :显示版本信息
cmatrix-u :刷新频率，0-9，也就是滚动的快慢
cmatrix-C :显示的颜色，支持green(默认),red,blue,white,yellow,cyan,
        magenta and black
例如:使用红色
cmatrix -b -C red
使用蓝色
cmatrix -b -C blue
等等........
主义:在运行状态下,使用0-9数字,可以改变运行速度快慢.
</code></pre>
<p>开启你的装逼之路把,骚年!</p>
]]></description></item><item><title>ttf 字体压缩</title><link>https://lruihao.cn/posts/web-font/</link><pubDate>Wed, 17 Oct 2018 21:38:06 +0000</pubDate><author>Lruihao</author><guid>https://lruihao.cn/posts/web-font/</guid><description><![CDATA[<h3 id="安装-nodejs">安装 nodeJs</h3>
<p>这个不多说，都有。</p>
<h3 id="安装字蛛">安装字蛛</h3>
<p>输入命令</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">npm install font-spider -g
</code></pre></td></tr></table>
</div>
</div><h3 id="运行">运行</h3>
<p>安装成功之后就开始压缩了
</p>
<p>我的css</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-css" data-lang="css"><span class="o">&lt;</span><span class="nt">style</span> <span class="nt">type</span><span class="o">=</span><span class="s2">&#34;text/css&#34;</span><span class="o">&gt;</span>
  <span class="p">@</span><span class="k">font-face</span> <span class="p">{</span>
    <span class="nt">font-family</span><span class="o">:</span> <span class="nt">MMT</span><span class="o">;</span>
    <span class="nt">src</span><span class="o">:</span> <span class="nt">url</span><span class="o">(</span><span class="s2">&#34;font/MMT_579767_SOAJ0_0.ttf&#34;</span><span class="o">);</span>
  <span class="p">}</span>
<span class="o">&lt;/</span><span class="nt">style</span><span class="o">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>生成新的字体库，命令行输入</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">font-spider C:\Users\李瑞豪\Desktop\love\index.html
</code></pre></td></tr></table>
</div>
</div><p></p>
<p><a href="http://font-spider.org" target="_blank" rel="noopener noreffer">官网</a></p>
]]></description></item><item><title>在Android上搭建hexo博客</title><link>https://lruihao.cn/posts/termux/</link><pubDate>Sat, 11 Aug 2018 16:59:05 +0000</pubDate><author>Lruihao</author><guid>https://lruihao.cn/posts/termux/</guid><description><![CDATA[<blockquote>
<p>暑假刚开始的时候放假回家没带电脑，只能玩手机，想折腾一下博客都没有条件，在一个发现一个app,卧槽😱，termux真的强大！(初始化需要科学上网)安卓手机上的linux简直了，在手机就可以搭了一个hexo博客，只要在github上实现分支管理就可以多终端同步更新了。恕我学疏才浅，还只想到这些！一开始想回校后，折腾一下hexo-admin实现类似动态博客一样的多终端管理(手动滑稽)，现在发现termux这样子的操作也不错嘛，挺装哔hhhhhh**<a href="https://lruihao.gitee.io" target="_blank" rel="noopener noreffer">部署后的效果</a>**</p>
</blockquote>
<h2 id="准备">准备</h2>
<ul>
<li>Termux</li>
<li>文件管理器（RE,MT文件管理器等高级一点的）</li>
</ul>
<h2 id="开始">开始</h2>
<p>打开Termux，输入$<code>pkg install nodejs</code>安装Nodejs，在输入<code>pkg install git</code>安装Git。<br>
过程会出现一个提示，输入y回车确认即可。<br>
按照Hexo官网提示安装Hexo。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">npm install hexo-cli -g
hexo init blog
<span class="nb">cd</span> blog
</code></pre></td></tr></table>
</div>
</div><p><strong>注意ssh配置先安装：</strong><code>pkg install openssh</code><br>
然后按照基本操作配置Hexo，GitHub或者gitee,coding等连上，部署测试一次。<br>
安装部署插件<code>npm install hexo-deployer-git --save</code>，部署<code>hexo d -g</code><br>
没有问题的话进行下一步。</p>
<h2 id="编辑">编辑</h2>
<p>写文章的话创建md文件命令和电脑上一样，文件管理器打开<code>/data/data/com.termux/files/home/i/source/_posts/</code>  编辑文章md文件。这种方式需要Root。<br>
没有Root的话可以使用Vim，网上很多教程。但是这种方式相对来说更麻烦。</p>
<h2 id="参考">参考</h2>
<ul>
<li><a href="https://www.sqlsec.com/2018/05/termux.html?yyue=a21bo.50862.201879" target="_blank" rel="noopener noreffer">termux高级终端安装使用配置教程</a></li>
<li><a href="https://www.oyohyee.com/post/Note/Termux" target="_blank" rel="noopener noreffer">使用 Termux 在手机上运行 linux 黑科技</a></li>
<li><a href="https://lruihao.cn/hexo%20&#43;%20github%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.html" target="_blank" rel="noopener noreffer">hexo 搭建过程</a></li>
<li><a href="https://my.oschina.net/ryaneLee/blog/638440" target="_blank" rel="noopener noreffer">超详细教程</a></li>
</ul>
<h2 id="效果图未连接githubcoding等">效果图(未连接github，coding等)</h2>
<p><a href="https://wx1.sinaimg.cn/mw690/006vSs63gy1ft2a0jo3hmj30u01hcguh.jpg" target="_blank" rel="noopener noreffer">效果图1</a><br>
<a href="https://wx4.sinaimg.cn/mw690/006vSs63gy1ft2a0kmm5xj30u01hcn2a.jpg" target="_blank" rel="noopener noreffer">效果图2</a>
<a href="https://wx3.sinaimg.cn/mw690/006vSs63gy1ft2a0lqt61j30u01hctla.jpg" target="_blank" rel="noopener noreffer">效果图3</a><br>
<a href="https://wx2.sinaimg.cn/mw690/006vSs63gy1ft2a0mgkm6j30u01hc78l.jpg" target="_blank" rel="noopener noreffer">效果图4</a></p>]]></description></item><item><title>hexo+github搭建个人博客及美化</title><link>https://lruihao.cn/posts/hexobuild/</link><pubDate>Fri, 01 Jun 2018 14:34:23 +0000</pubDate><author>Lruihao</author><guid>https://lruihao.cn/posts/hexobuild/</guid><description><![CDATA[<p><strong><a href="/categories/hexo/" rel="">更多关于hexo</a></strong></p>
<h1 id="首先">首先</h1>
<p><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener noreffer">官方文档</a>是我们的第一手资料，也是最好的。
安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：</p>
<ul>
<li><a href="https://nodejs.org/en/" target="_blank" rel="noopener noreffer">Node.js</a></li>
<li><a href="https://git-scm.com/" target="_blank" rel="noopener noreffer">Git</a></li>
</ul>
<h1 id="hexo安装">hexo安装</h1>
<p>如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">npm install -g hexo-cli
</code></pre></td></tr></table>
</div>
</div><h1 id="建站">建站</h1>
<p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">hexo init &lt;folder&gt;
<span class="nb">cd</span> &lt;folder&gt;
npm install
</code></pre></td></tr></table>
</div>
</div><p><folder>为一个文件夹的名字
新建完成后，指定文件夹的目录如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">.
├── _config.yml
├── package.json
├── scaffolds
├── source
|   ├── _drafts
|   └── _posts
└── themes
</code></pre></td></tr></table>
</div>
</div><h1 id="安装hexo插件">安装hexo插件</h1>
<p>全装上吧，没事。。。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">npm install hexo-generator-index --save
npm install hexo-generator-archive --save
npm install hexo-generator-category --save
npm install hexo-generator-tag --save
npm install hexo-server --save
npm install hexo-deployer-git --save
npm install hexo-deployer-heroku --save
npm install hexo-deployer-rsync --save
npm install hexo-deployer-openshift --save
npm install hexo-renderer-marked@0.2 --save
npm install hexo-renderer-stylus@0.2 --save
npm install hexo-generator-feed@1 --save
npm install hexo-generator-sitemap@1 --save
</code></pre></td></tr></table>
</div>
</div><h1 id="本地查看效果">本地查看效果</h1>
<p>执行下面语句，执行完再登录localhost:4000查看效果（执行完不要按Ctrl+C，不然就停止了）</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">hexo g
hexo s
</code></pre></td></tr></table>
</div>
</div><p><strong>其他步骤在这里不赘述，参见<a href="https://my.oschina.net/ryaneLee/blog/638440" target="_blank" rel="noopener noreffer">超详细教程</a></strong>
<strong><a href="https://lruihao.cn/posts/termux/" target="_blank" rel="noopener noreffer">安卓上搭建hexo博客</a></strong></p>
<h1 id="部署">部署</h1>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">hexo g -d
</code></pre></td></tr></table>
</div>
</div><p>部署后我们可以浏览器搜 username.github.io 查看自己的博客效果，，比如我的<a href="https://lruihao.github.io/" target="_blank" rel="noopener noreffer">lruihao.github.io</a></p>
<h1 id="美化">美化</h1>
<p><strong>这些美化都写的很详细，我建议你们自己好好看看吧，我也是在这里看到的，如果问我和这里说的是一样的。</strong></p>
<ul>
<li><a href="/categories/hexo/" rel="">hexo个性化教程</a></li>
<li><a href="http://www.zhaojun.im" target="_blank" rel="noopener noreffer">valine特别鸣谢赵俊👍</a></li>
<li><a href="https://asdfv1929.github.io/tags/Hexo/" target="_blank" rel="noopener noreffer">asdfv1929</a></li>
<li><a href="https://hexo.io/themes/" target="_blank" rel="noopener noreffer">hexo官方主题集合</a>，<del>我用的是aloha主题</del>，该主题<a href="https://github.com/henryhuang/hexo-theme-aloha/wiki/zh_CN" target="_blank" rel="noopener noreffer">官方文档</a>，<strong>后改用next主题<a href="https://theme-next.iissnan.com/" target="_blank" rel="noopener noreffer">next主题</a></strong></li>
<li><a href="https://hexo.io/plugins" target="_blank" rel="noopener noreffer">hexo官方插件</a>
<del>说说我的主题遇到的一些问题，由于这个主题用的人少，所以作者优化的不是很好（next使用最多），当然也可以反过来说，所以自己美化了一点</del></li>
</ul>
<h2 id="博文置顶">博文置顶</h2>
<p>修改 <code>hero-generator-index</code> 插件，把文件：<code>node_modules/hexo-generator-index/lib/generator.js</code> 内的代码替换为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="err">&#39;</span><span class="n">use</span> <span class="n">strict</span><span class="err">&#39;</span><span class="o">;</span>
<span class="n">var</span> <span class="n">pagination</span> <span class="o">=</span> <span class="n">require</span><span class="o">(</span><span class="err">&#39;</span><span class="n">hexo</span><span class="o">-</span><span class="n">pagination</span><span class="err">&#39;</span><span class="o">);</span>
<span class="n">module</span><span class="o">.</span><span class="na">exports</span> <span class="o">=</span> <span class="n">function</span><span class="o">(</span><span class="n">locals</span><span class="o">){</span>
  <span class="n">var</span> <span class="n">config</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">config</span><span class="o">;</span>
  <span class="n">var</span> <span class="n">posts</span> <span class="o">=</span> <span class="n">locals</span><span class="o">.</span><span class="na">posts</span><span class="o">;</span>
    <span class="n">posts</span><span class="o">.</span><span class="na">data</span> <span class="o">=</span> <span class="n">posts</span><span class="o">.</span><span class="na">data</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">function</span><span class="o">(</span><span class="n">a</span><span class="o">,</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">.</span><span class="na">top</span> <span class="o">&amp;&amp;</span> <span class="n">b</span><span class="o">.</span><span class="na">top</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// 两篇文章top都有定义
</span><span class="c1"></span>            <span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">.</span><span class="na">top</span> <span class="o">==</span> <span class="n">b</span><span class="o">.</span><span class="na">top</span><span class="o">)</span> <span class="k">return</span> <span class="n">b</span><span class="o">.</span><span class="na">date</span> <span class="o">-</span> <span class="n">a</span><span class="o">.</span><span class="na">date</span><span class="o">;</span> <span class="c1">// 若top值一样则按照文章日期降序排
</span><span class="c1"></span>            <span class="k">else</span> <span class="k">return</span> <span class="n">b</span><span class="o">.</span><span class="na">top</span> <span class="o">-</span> <span class="n">a</span><span class="o">.</span><span class="na">top</span><span class="o">;</span> <span class="c1">// 否则按照top值降序排
</span><span class="c1"></span>        <span class="o">}</span>
        <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">.</span><span class="na">top</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">b</span><span class="o">.</span><span class="na">top</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）
</span><span class="c1"></span>            <span class="k">return</span> <span class="o">-</span><span class="n">1</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="k">if</span><span class="o">(!</span><span class="n">a</span><span class="o">.</span><span class="na">top</span> <span class="o">&amp;&amp;</span> <span class="n">b</span><span class="o">.</span><span class="na">top</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">1</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="k">return</span> <span class="n">b</span><span class="o">.</span><span class="na">date</span> <span class="o">-</span> <span class="n">a</span><span class="o">.</span><span class="na">date</span><span class="o">;</span> <span class="c1">// 都没定义按照文章日期降序排
</span><span class="c1"></span>    <span class="o">});</span>
  <span class="n">var</span> <span class="n">paginationDir</span> <span class="o">=</span> <span class="n">config</span><span class="o">.</span><span class="na">pagination_dir</span> <span class="o">||</span> <span class="err">&#39;</span><span class="n">page</span><span class="err">&#39;</span><span class="o">;</span>
  <span class="k">return</span> <span class="n">pagination</span><span class="o">(</span><span class="err">&#39;&#39;</span><span class="o">,</span> <span class="n">posts</span><span class="o">,</span> <span class="o">{</span>
    <span class="n">perPage</span><span class="o">:</span> <span class="n">config</span><span class="o">.</span><span class="na">index_generator</span><span class="o">.</span><span class="na">per_page</span><span class="o">,</span>
    <span class="n">layout</span><span class="o">:</span> <span class="o">[</span><span class="err">&#39;</span><span class="n">index</span><span class="err">&#39;</span><span class="o">,</span> <span class="err">&#39;</span><span class="n">archive</span><span class="err">&#39;</span><span class="o">],</span>
    <span class="n">format</span><span class="o">:</span> <span class="n">paginationDir</span> <span class="o">+</span> <span class="err">&#39;</span><span class="o">/%</span><span class="n">d</span><span class="o">/</span><span class="err">&#39;</span><span class="o">,</span>
    <span class="n">data</span><span class="o">:</span> <span class="o">{</span>
      <span class="n">__index</span><span class="o">:</span> <span class="kc">true</span>
    <span class="o">}</span>
  <span class="o">});</span>
<span class="o">};</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="about页面">about页面</h2>
<p>about页面可以用HTML写，你想怎么写都行，我用的最简单的方法，直接<code>hexo n page &quot;about&quot;</code>后，会生成一个md文件，也就是后面说的文章，直接写文章就行了。</p>
<h2 id="添加搜索评论分享">添加搜索，评论，分享</h2>
<p>搜索功能真心好用，当文章多起来的时候，标签提供的作用已经很少了，只能简单索引，搜索却能精确查找，这里我用的依旧是最简单的本地站内搜索。
安装<code>hexo-generator-searchdb</code></p>
<p>在站点的根目录下执行以下命令：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">npm install hexo-generator-searchdb --save
</code></pre></td></tr></table>
</div>
</div><p>配置站点配置文件
新增以下内容到任意位置：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">search:
  path: search.xml
  field: post
  format: html
  limit: 10000
</code></pre></td></tr></table>
</div>
</div><p>配置主题配置文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"># Local search
local_search:
  enable: true
</code></pre></td></tr></table>
</div>
</div><p><a href="https://blog.naaln.com/2016/07/hexo-with-algolia/" target="_blank" rel="noopener noreffer">algolia参考文件</a><br>
让搜索引擎找到你的博客，还是看到邱承佳学长博文有写到<a href="https://blog.csdn.net/qq_26891045/article/details/51280470" target="_blank" rel="noopener noreffer">传送门</a></p>
<h2 id="添加访客数阅读量等">添加访客数，阅读量等</h2>
<p>评论有多说（多说好像挂了），计数有不蒜，我用的不蒜子，还有其他的。。。</p>
<h3 id="文章阅读量">文章阅读量</h3>
<blockquote>
<p>以下适合非next主题的部分主题，next 主题已经自带，到主题配置文件修改就好了。</p>
</blockquote>
<p>打开以下路径在你喜欢的地方添加代码，<code>\blog\hexo\themes\主题名字\layout\_partial</code>，找到 <code>article.ejs</code>文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">align</span><span class="o">=</span><span class="s">&#34;left&#34;</span><span class="p">&gt;&lt;</span><span class="nt">span</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;busuanzi_container_page_pv&#34;</span><span class="p">&gt;</span>
      本文总阅读量<span class="p">&lt;</span><span class="nt">span</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;busuanzi_value_page_pv&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>次
    <span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="站点访问量访客数">站点访问量，访客数</h3>
<p>打开以下路径在你喜欢的地方添加代码，<code>\blog\hexo\themes\主题名字\layout\_partial</code>，找到 <code>footer.ejs</code>文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&#34;</span> <span class="na">async</span> <span class="na">defer</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>

<span class="p">&lt;</span><span class="nt">span</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;busuanzi_container_page_pv&#34;</span><span class="p">&gt;</span>
    本站总访问量<span class="p">&lt;</span><span class="nt">span</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;busuanzi_value_site_pv&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>次  |  
<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">span</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;busuanzi_container_site_uv&#34;</span><span class="p">&gt;</span>
	本站访客数<span class="p">&lt;</span><span class="nt">span</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;busuanzi_value_site_uv&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>人次
<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p><strong>2018.10.08更新
不蒜子官网说七牛强制过期域名<del>dn-lbstatics.qbox.me</del>,所以js文件位置发生改变，改为<code>busuanzi.ibruce.info</code></strong></p>
<h1 id="写文章">写文章</h1>
<p>hexo文章用轻量型标签语言Markdown编写</p>
<ul>
<li><a href="https://sspai.com/post/25137" target="_blank" rel="noopener noreffer">markdown入门</a></li>
<li><a href="https://markdown.tw/" target="_blank" rel="noopener noreffer">繁体原始文件</a></li>
<li><a href="https://github.com/othree/markdown-syntax-zhtw/blob/master/syntax.md" target="_blank" rel="noopener noreffer">繁体原始文件github</a></li>
</ul>
]]></description></item></channel></rss>