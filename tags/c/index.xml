<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>C - 标签 - 菠菜眾長</title><link>https://lruihao.cn/tags/c/</link><description>C - 标签 - 菠菜眾長</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>1024@lruihao.cn (Lruihao)</managingEditor><webMaster>1024@lruihao.cn (Lruihao)</webMaster><lastBuildDate>Fri, 10 Aug 2018 20:13:08 +0000</lastBuildDate><atom:link href="https://lruihao.cn/tags/c/" rel="self" type="application/rss+xml"/><item><title>Dreamoon and Stairs</title><link>https://lruihao.cn/posts/codeforces476a/</link><pubDate>Fri, 10 Aug 2018 20:13:08 +0000</pubDate><author>作者</author><guid>https://lruihao.cn/posts/codeforces476a/</guid><description>题目链接 Dreamoon wants to climb up a stair of n steps. He can climb 1 or 2 steps at each move. Dreamoon wants the number of moves to be a multiple of an integer m. What is the minimal number of moves making him climb to the top of the stairs that satisfies his condition? Input The single line contains two space separated integers n, m (0</description></item><item><title>Dreamoon and WiFi(组合数学)</title><link>https://lruihao.cn/posts/codeforces476b/</link><pubDate>Fri, 10 Aug 2018 17:44:47 +0000</pubDate><author>作者</author><guid>https://lruihao.cn/posts/codeforces476b/</guid><description><![CDATA[题目链接 题目大意 就是给定两个字符串，第一个字符串由&quot;+&quot;,&quot;-&ldquo;组成，第二个字符串由&rdquo;]]></description></item><item><title>食物链-poj1182（带权并查集经典模板）</title><link>https://lruihao.cn/posts/poj1182/</link><pubDate>Thu, 02 Aug 2018 11:10:37 +0000</pubDate><author>作者</author><guid>https://lruihao.cn/posts/poj1182/</guid><description><![CDATA[<p><a href="http://poj.org/problem?id=1182" target="_blank" rel="noopener noreffer">题目链接</a><br>
<a href="https://blog.csdn.net/freezhanacmore/article/details/8767413" target="_blank" rel="noopener noreffer">思路参考1</a>,<a href="https://blog.csdn.net/niushuai666/article/details/6981689" target="_blank" rel="noopener noreffer">思路参考2</a>（没看懂）</p>]]></description></item><item><title>小希的迷宫-HDU-1272(并查集or树性质)</title><link>https://lruihao.cn/posts/hdu1272/</link><pubDate>Wed, 01 Aug 2018 21:45:50 +0000</pubDate><author>作者</author><guid>https://lruihao.cn/posts/hdu1272/</guid><description><![CDATA[<h2 id="题目链接小希的迷宫httpacmhdueducnshowproblemphppid1272">题目链接：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1272" target="_blank" rel="noopener noreffer">小希的迷宫</a></h2>
<h2 id="并查集">并查集：</h2>
<ul>
<li>无回路</li>
<li>单连通</li>
</ul>
<p>并查集做，首先想到的是判断两个点是否连通，不连通就合并，已连通的话说明会形成<strong>回路</strong>，则可以判定No，交了一发错了。<br>
想了一下没有考虑到多个连通域的情况，该题必须只有<strong>一个连通域</strong></p>
<h2 id="树的性质">树的性质：</h2>
<p>既然单连通无回路，则这肯定是一棵树；那么edge=v-1;</p>]]></description></item><item><title>畅通工程-HDU-1232(并查集经典模板)</title><link>https://lruihao.cn/posts/%E7%95%85%E9%80%9A%E5%B7%A5%E7%A8%8B/</link><pubDate>Tue, 31 Jul 2018 11:08:43 +0000</pubDate><author>作者</author><guid>https://lruihao.cn/posts/%E7%95%85%E9%80%9A%E5%B7%A5%E7%A8%8B/</guid><description><![CDATA[<h4 id="并查集入门推荐超有爱的并查集httpsblogcsdnnetniushuai666articledetails6662911">并查集入门推荐：<a href="https://blog.csdn.net/niushuai666/article/details/6662911" target="_blank" rel="noopener noreffer">超有爱的并查集~</a></h4>
<h4 id="题目链接畅通工程httpacmhdueducnshowproblemphppid1232">题目链接：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=1232" target="_blank" rel="noopener noreffer">畅通工程</a></h4>
<h4 id="题意分析">题意分析：</h4>
<p>首先在地图上给你若干个城镇，这些城镇都可以看作点，然后告诉你哪些对城镇之间是有道路直接相连的。最后要解决的是整幅图的连通性问题。比如随意给你两个点，让你判断它们是否连通，或者问你整幅图一共有几个连通分支，也就是被分成了几个互相独立的块。像畅通工程这题，问还需要修几条路，实质就是求有几个连通分支。</p>]]></description></item><item><title>牛客练习赛23</title><link>https://lruihao.cn/posts/%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B23/</link><pubDate>Fri, 27 Jul 2018 21:56:08 +0000</pubDate><author>作者</author><guid>https://lruihao.cn/posts/%E7%89%9B%E5%AE%A2%E7%BB%83%E4%B9%A0%E8%B5%9B23/</guid><description><![CDATA[<p>两题水过，暴力，找规律。。</p>
<h2 id="托米的赌球httpswwwnowcodercomacmcontest156a"><a href="https://www.nowcoder.com/acm/contest/156/A" target="_blank" rel="noopener noreffer">托米的赌球</a></h2>
<h2 id="托米的划分httpswwwnowcodercomacmcontest156b"><a href="https://www.nowcoder.com/acm/contest/156/B" target="_blank" rel="noopener noreffer">托米的划分</a></h2>]]></description></item><item><title>poj-2251-Dungeon Master（三维bfs最短路）</title><link>https://lruihao.cn/posts/poj-2251-dungeon-master%E4%B8%89%E7%BB%B4bfs%E6%9C%80%E7%9F%AD%E8%B7%AF/</link><pubDate>Sun, 22 Jul 2018 12:02:32 +0000</pubDate><author>作者</author><guid>https://lruihao.cn/posts/poj-2251-dungeon-master%E4%B8%89%E7%BB%B4bfs%E6%9C%80%E7%9F%AD%E8%B7%AF/</guid><description>英文原题链接 Description - 题目描述 你被困在一个三维的空间中,现在要寻找最短路径逃生！ 空间由立方体单位构成 你每次向上下前后左右移动一个单位需要一分钟 你不</description></item><item><title>poj-3984-迷宫问题(bfs路径)</title><link>https://lruihao.cn/posts/poj-3984-%E8%BF%B7%E5%AE%AB%E9%97%AE%E9%A2%98bfs%E8%B7%AF%E5%BE%84/</link><pubDate>Sun, 22 Jul 2018 11:50:20 +0000</pubDate><author>作者</author><guid>https://lruihao.cn/posts/poj-3984-%E8%BF%B7%E5%AE%AB%E9%97%AE%E9%A2%98bfs%E8%B7%AF%E5%BE%84/</guid><description>迷宫问题 Time Limit: 1000MS Memory Limit: 65536K Total Submissions: 32323 Accepted: 18471 Description 定义一个二维数组： int maze[5][5] = { 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, }; 它表示一个迷宫，其中的1表示墙</description></item><item><title>Wannafly挑战赛20-染色</title><link>https://lruihao.cn/posts/wannafly%E6%8C%91%E6%88%98%E8%B5%9B20-%E6%9F%93%E8%89%B2/</link><pubDate>Sun, 22 Jul 2018 11:46:25 +0000</pubDate><author>作者</author><guid>https://lruihao.cn/posts/wannafly%E6%8C%91%E6%88%98%E8%B5%9B20-%E6%9F%93%E8%89%B2/</guid><description>链接:https://www.nowcoder.com/acm/contest/133/A 来源:牛客网 题目描述 现在有一棵被Samsara-K</description></item><item><title>Educational Codeforces Round 47 (Rated for Div. 2)</title><link>https://lruihao.cn/posts/educational-codeforces-round-47-rated-for-div.-2/</link><pubDate>Sun, 22 Jul 2018 11:25:56 +0000</pubDate><author>作者</author><guid>https://lruihao.cn/posts/educational-codeforces-round-47-rated-for-div.-2/</guid><description><![CDATA[那天晚上报名了没打，第二天早上打的，也只出了两题。 A. Game Shopping 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #include&lt;iostream&gt;using namespace std; int main(){ int n,m,s=0; cin&gt;&gt;n&gt;&gt;m; int i,j; int c[1000],a[1000]; for(i=0;i&lt;n;i++) cin&gt;&gt;c[i];]]></description></item></channel></rss>