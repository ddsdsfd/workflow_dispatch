<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>linux - 分類 - 菠菜眾長</title><link>https://lruihao.cn/categories/linux/</link><description>linux - 分類 - 菠菜眾長</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>1024@lruihao.cn (Lruihao)</managingEditor><webMaster>1024@lruihao.cn (Lruihao)</webMaster><lastBuildDate>Fri, 17 May 2019 23:08:04 +0000</lastBuildDate><atom:link href="https://lruihao.cn/categories/linux/" rel="self" type="application/rss+xml"/><item><title>HustOJ 基础搭建教程</title><link>https://lruihao.cn/posts/hustoj/</link><pubDate>Fri, 17 May 2019 23:08:04 +0000</pubDate><author>Lruihao</author><guid>https://lruihao.cn/posts/hustoj/</guid><description><![CDATA[<blockquote>
<p>目前 HustOj 在 GitHUb 地址是：<a href="https://github.com/zhblue/hustoj" target="_blank" rel="noopener noreffer">https://github.com/zhblue/hustoj</a><br>
<strong>安装时注意 ubuntu 版本</strong>，没条件的可以在自己 ubuntu 上尝试，或者虚拟机上（关注公众号回复<code>ubuntu16.04</code>获取 iso 镜像文件），也可以在云实验室的云服务器上做做实验。<br>
更多说明及 ACM/NOIP 题库下载见官网博客 <a href="http://www.hustoj.com/" target="_blank" rel="noopener noreffer">代码的那些事|程序员回忆录</a></p>
</blockquote>
<h1 id="快速安装-oj">快速安装 OJ</h1>
<p>下载</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">wget https://raw.githubusercontent.com/zhblue/hustoj/master/trunk/install/install-ubuntu16+.sh
</code></pre></td></tr></table>
</div>
</div><p>安装</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">sudo bash install-ubuntu16+.sh
</code></pre></td></tr></table>
</div>
</div><p>等待中一路回车，当提示 done！ 则表示安装成功：
</p>
<h1 id="使用-hustoj">使用 HustOJ</h1>
<p>打开网页/IP 地址<br>
注册 admin<br>
用 admin 作为用户名注册一个用户，将会自动成为管理员。<br>
<br>
注册成功，会提示：<br>
<br>
登录后台<br>
登录账号，并点击右上角的管理：<br>
<br>
添加测试题目<br>
在后台选择添加题目，添加成功：<br>
<br>
然后再提交代码测试判题机。</p>
<h1 id="说明">说明</h1>
<p>安装后几个重要配置文件的位置</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">/home/judge/etc/judge.conf
/home/judge/src/web/include/db_info.inc.php
/etc/php5/fpm/php.ini 或 /etc/php7.0/fpm/php.ini
/etc/nginx/sites-enabled/default
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>本地搭建网站服务器并穿透内网</title><link>https://lruihao.cn/posts/ngrok/</link><pubDate>Wed, 03 Apr 2019 19:29:43 +0000</pubDate><author>Lruihao</author><guid>https://lruihao.cn/posts/ngrok/</guid><description><![CDATA[<blockquote>
<p>一直都想在自己电脑上搭建一个网站或者把自己的电脑做成服务器，今天终于简单实现了。还有很多知识需要学习，简单记录一下。</p>
</blockquote>
<h1 id="搭建环境">搭建环境</h1>
<p>我的电脑是<code>ubuntu+windows</code>双系统的，所以我先在 ubuntu 上面装了一个宝塔面板，方便通过 web 管理电脑，宝塔安装好后安装相关的环境<code>mysql,php,nginx</code>等。我们现在只能通过本地 ip<code>127.0.0.1:8888</code>访问面板。</p>
<h1 id="ngrok-穿透">ngrok 穿透</h1>
<p>去 ngrok 注册登录，购买隧道（有免费的），然后绑定端口，绑定域名，这里我们拿端口<code>8888</code>和域名<code>test.lruihao.cn</code>做实验，也就是宝塔面板的端口，这样我们就可以透过域名远程访问本地服务器，这样是不是开始有云服务器的感觉了。然后宝塔面板设置也绑定好域名<code>test.lruihao.cn</code>,dns 服务商那里做好相应的解析。<br>
然后在 ngrok 那里下载 sunny 客户端文件，我们是 ubuntu 选择<code>linux-64bits</code>版本。解压后在 ubuntu 打开终端进入 sunny 文件目录，权限给到 755，运行命令<code>./sunny clientid xxxxxxx</code> 后面的你的隧道订单的 id。</p>
<p>现在就可以通过互联网访问我的 ubuntu 服务器了。</p>
<h1 id="搭建网站">搭建网站</h1>
<p>前面两步搞定，搭建网站就没问题了。<br>
我们只要把网站的端口按第二步的在 ngrok 设置好就可以穿透了。</p>
<h1 id="注意">注意</h1>
<p>访问本地网站的必要条件是你的电脑得是开机状态而且有网络。</p>]]></description></item><item><title>ubuntu + windows 双系统默认启动项设置</title><link>https://lruihao.cn/posts/windefault/</link><pubDate>Thu, 21 Mar 2019 12:48:30 +0000</pubDate><author>Lruihao</author><guid>https://lruihao.cn/posts/windefault/</guid><description><![CDATA[<div class="featured-image">
                <img src="/posts/windefault/images/1.png" referrerpolicy="no-referrer">
            </div><blockquote>
<p>双系统默认启动项是 Ubuntu，而日常使用最多的还是 Windows，所以说很不方便，一不小心就开机到 Ubuntu 去了。今天来设置一下。</p>
</blockquote>
<h1 id="修改etcdefaultgrub文件">修改<code>/etc/default/grub</code>文件</h1>
<blockquote>
<p>同时按住键盘上的“Ctrl Alt T”三个键（即快捷键“Ctrl+Alt+T”），打开终端窗口。在终端内输入 sudo gedit /etc/default/grub  按 Enter 键确认，提示输入用户密码，输入的用户密码是看不见的，不要管它，输入完成确认即可打开 grub 文件。</p>
</blockquote>
<p></p>
<blockquote>
<p>把 grub 文件中的 <code>GRUB_DEFAULT=0</code> 中的 0 改为 <code>saved</code>, 把 <code>GRUB_TIMEOUT=10</code> 中的 10 改为 5。（这里的 5 表示开机时等待选择操作系统是时间是 5 秒）<br>
在文件末尾添加 <code>GRUB_SAVEDEFAULT=true</code>后保存文件并退出。</p>
</blockquote>
<p></p>
<h1 id="更新启动配置文件">更新启动配置文件</h1>
<blockquote>
<p>在终端输入 sudo update-grub 按 Enter 键确认</p>
</blockquote>
<p></p>
<h1 id="重启">重启</h1>
<p><code>sudo reboot</code>或者点击重启，重启到启动菜单时，选择你要更改为默认启动项的系统，按 Enter 键确认启动即可，下次启动时刚刚选择的系统即为默认启动系统，直到你手动选择启动其他的系统为止。以后可以轻松的来回切换默认系统了。</p>]]></description></item><item><title>宝塔面板安装</title><link>https://lruihao.cn/posts/bt/</link><pubDate>Mon, 18 Mar 2019 21:31:43 +0000</pubDate><author>Lruihao</author><guid>https://lruihao.cn/posts/bt/</guid><description><![CDATA[<div class="featured-image">
                <img src="/posts/bt/images/1.png" referrerpolicy="no-referrer">
            </div><p>极速方便的一键配置与管理，免除繁琐的命令行操作，通过 Web 面板一键即可操作实现。可选择安装 lamp 或者 lnmp 环境，可创建及管理网站，可创建及管理数据库，可创建及管理 FTP 等等。<a href="https://www.bt.cn/?invite_code=MV9sYXJnZHI=" target="_blank" rel="noopener noreffer">宝塔官网介绍</a></p>
<h1 id="系统要求">系统要求</h1>
<blockquote>
<p>操作系统：全新系统（支持 CentOS、Ubuntu、Debian、Fedora、Deepin)，<br>
确保是干净的操作系统，没有安装过其它环境带的 Apache/Nginx/php/MySQL<br>
宝塔 Linux6.0 版本是基于 centos7 开发的，强烈建议使用 centos7.x 系统<br>
内存要求：内存要求最低 512MB，推荐 768MB 以上，纯面板约占系统 60MB 内存</p>
</blockquote>
<h1 id="安装方法">安装方法</h1>
<p>官方号称 2 分钟装好面板，一键管理服务器。</p>
<blockquote>
<p>使用 SSH 连接工具，如宝塔远程桌面助手连接到您的 Linux 服务器后，挂载磁盘，根据系统执行相应命令开始安装（大约 2 分钟完成面板安装）：</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Shell" data-lang="Shell">yum install -y wget <span class="o">&amp;&amp;</span> wget -O install.sh http://download.bt.cn/install/install_6.0.sh <span class="o">&amp;&amp;</span> sh install.sh
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Shell" data-lang="Shell">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh <span class="o">&amp;&amp;</span> sudo bash install.sh
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Shell" data-lang="Shell">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh <span class="o">&amp;&amp;</span> bash install.sh
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Shell" data-lang="Shell">wget -O install.sh http://download.bt.cn/install/install_6.0.sh <span class="o">&amp;&amp;</span> bash install.sh
</code></pre></td></tr></table>
</div>
</div><p></p>
<h1 id="搭建-ftp-和云盘服务器">搭建 ftp 和云盘服务器</h1>
<p>可以很傻瓜式的搭建自己的云盘，和平时用的比较多的 ftp 服务器。搭建静态网站也可以用 ftp 来上传文件。</p>]]></description></item><item><title>win10,ubuntu 双系统时间不一致</title><link>https://lruihao.cn/posts/ubuntutime/</link><pubDate>Fri, 15 Mar 2019 14:28:10 +0000</pubDate><author>Lruihao</author><guid>https://lruihao.cn/posts/ubuntutime/</guid><description><![CDATA[<blockquote>
<p>我的 Ubuntu 和 Windows 双系统是 Ubuntu 是第一启动项，所以总是开机忘记点下键，一进 Ubuntu 系统时间就不对了（总是少了 8 小时），回到 Windows 时间也是错的。知道是错的调整一下还好。忘记调了有时候真的会误事。比如说 git 版本控制提交会遇到问题种种等。</p>
</blockquote>
<h2 id="原因">原因</h2>
<p>在安装 Ubuntu 和 Windows 双系统的情况下，Ubuntu 的时间总会和 Windows 的时间相差 8 小时，原因在于 widows 认为 BIOS 时间是本地时间，Ubuntu 认为 BIOS 时间是 UTC 时间，即协调世界时，(Universal Time Coordinated) 英文缩写，是由国际无线电咨询委员会规定和推荐，并由国际时间局 (BIH) 负责保持的以秒为基础的时间标度。UTC 相当于本初子午线（即经度 0 度）上的平均太阳时，过去曾用格林威治平均时 (GMT) 来表示。北京时间比 UTC 时间早 8 小时，以 1999 年 1 月 1 日 00:00 UTC 为例，UTC 时间是零点，北京时间为 1999 年 1 月 1 日早上 8 点整。)，所以我们在时间上面相隔了 8 个小时。这个时候 bios 的时间和系统的时间当然是不一致，一个代表 utc 时间，一个代表 cst（＋8 时区），即我们常用的时间。</p>
<h2 id="方法一">方法一</h2>
<p>在 Windows 下 进行如下修改：（博主 win10,win7 自测）<br>
以管理员身份运行 CMD（<code>win+x 后选择 Windows Powershell（管理员）</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Reg add HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1
</code></pre></td></tr></table>
</div>
</div><p>重启看看时间发现 ok 了。</p>
<h2 id="方法二">方法二</h2>
<p>老版 Ubuntu（Ubuntu10 左右）：<br>
修改 <code>/etc/default/rcS</code> 文件<br>
编辑 <code>/etc/default/rcS</code> 将 <code>UTC=yes</code>改成 <code>UTC=no</code> 。</p>
<p>新版 Ubuntu（Ubuntu16.04）：
新版本的 Ubuntu 使用 systemd 启动之后，时间也改成了由 timedatectl 来管理，此方法就不适用了。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">$sudo timedatectl set-local-rtc 1
</code></pre></td></tr></table>
</div>
</div><p>先在 ubuntu 下更新一下时间，确保时间无误：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">$sudo apt-get install ntpdate
$sudo ntpdate time.windows.com
</code></pre></td></tr></table>
</div>
</div><p>然后将时间更新到硬件上：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">$sudo hwclock --localtime --systohc
</code></pre></td></tr></table>
</div>
</div><p>重新进入 windows10，发现时间恢复正常了！</p>]]></description></item><item><title>shell 脚本初体验</title><link>https://lruihao.cn/posts/shell/</link><pubDate>Mon, 29 Oct 2018 11:57:39 +0000</pubDate><author>Lruihao</author><guid>https://lruihao.cn/posts/shell/</guid><description><![CDATA[<p>今天上机学了几个小命令</p>
<ul>
<li>read</li>
<li>echo</li>
<li>if</li>
</ul>
<p>然后自己写了一个小脚本觉得还挺有趣的</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="cp">#!/bin/bash
</span><span class="cp"></span><span class="c1">#liruihao</span>
<span class="c1">#menu.sh</span>
<span class="c1">#sudo apt curl install nyancat sl figlet toilet cowsay </span>
<span class="nb">echo</span> <span class="s2">&#34;-------------菜-单--------------&#34;</span>
<span class="nb">echo</span> <span class="s2">&#34;------------1-打印二维码--------&#34;</span>
<span class="nb">echo</span> <span class="s2">&#34;------------2-彩虹猫------------&#34;</span>
<span class="nb">echo</span> <span class="s2">&#34;------------3-小火切------------&#34;</span>
<span class="nb">echo</span> <span class="s2">&#34;------------4-打字机------------&#34;</span>
<span class="nb">echo</span> <span class="s2">&#34;------------5-小许牛------------&#34;</span>
<span class="nb">echo</span> <span class="s2">&#34;----------Ctrl+c暂停程序--------&#34;</span>
<span class="nb">echo</span> <span class="s2">&#34;&#34;</span>
<span class="nb">echo</span> <span class="s2">&#34;请输入序号！&#34;</span>
<span class="nb">read</span> i
<span class="k">if</span> <span class="nb">test</span> <span class="nv">$i</span> -eq <span class="m">1</span>
<span class="k">then</span>
	<span class="nb">echo</span> <span class="s2">&#34;请输入网址！&#34;</span>
	<span class="nb">read</span> s1
       	<span class="nb">echo</span> <span class="nv">$s1</span> <span class="p">|</span>curl -F-<span class="o">=</span><span class="se">\&lt;</span>- qrenco.de
<span class="k">fi</span>
<span class="k">if</span> <span class="nb">test</span> <span class="nv">$i</span> -eq <span class="m">2</span>
<span class="k">then</span>
	nyancat
<span class="k">fi</span>
<span class="k">if</span> <span class="nb">test</span> <span class="nv">$i</span> -eq <span class="m">3</span>
<span class="k">then</span>
	sl
<span class="k">fi</span>
<span class="k">if</span> <span class="nb">test</span> <span class="nv">$i</span> -eq <span class="m">4</span>
<span class="k">then</span>
	<span class="nb">echo</span> <span class="s2">&#34;请输入字符串！&#34;</span>
	<span class="nb">read</span> s2
	<span class="nb">echo</span> <span class="s2">&#34;选择样式：&#34;</span>
	<span class="nb">echo</span> <span class="s2">&#34;------样式1-----&#34;</span>
	<span class="nb">echo</span> <span class="s2">&#34;------样式2-----&#34;</span>
	<span class="nb">read</span> j
	<span class="k">if</span> <span class="nb">test</span> <span class="nv">$j</span> -eq <span class="m">1</span>
	<span class="k">then</span>
		figlet <span class="nv">$s2</span>
	<span class="k">else</span>
		toilet -f mono12 -F gay <span class="nv">$s2</span>
	<span class="k">fi</span>
<span class="k">fi</span>
<span class="k">if</span> <span class="nb">test</span> <span class="nv">$i</span> -eq <span class="m">5</span>
<span class="k">then</span>
	<span class="nb">echo</span> <span class="s2">&#34;请输入字符串！&#34;</span>
	<span class="nb">read</span> s3
	cowsay <span class="nv">$s3</span>
<span class="k">fi</span>
<span class="nb">echo</span> <span class="s2">&#34;任意建继续！&#34;</span>
<span class="nb">read</span> x
clear
./menu.sh

</code></pre></td></tr></table>
</div>
</div><p>




</p>]]></description></item><item><title>云服务器 CentOS 系统搭建 web 服务</title><link>https://lruihao.cn/posts/web-server-yun/</link><pubDate>Mon, 29 Oct 2018 09:15:58 +0000</pubDate><author>Lruihao</author><guid>https://lruihao.cn/posts/web-server-yun/</guid><description><![CDATA[<h3 id="搭建-apache-web-服务">搭建 Apache web 服务</h3>
<ol>
<li>安装 Apache 超文本传输协议 (HTTP) 服务器的主程序</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[root@VM_0_6_centos /]# yum install -y httpd
</code></pre></td></tr></table>
</div>
</div><p>注意安装目录，可通过 cd 命令切换。</p>
<ol start="2">
<li>启动 HTTP 服务</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[root@VM_0_6_centos /]# systemctl start httpd.service 
</code></pre></td></tr></table>
</div>
</div><p>如果启动失败，可通过 systemctl status httpd.service 查看错误原因。<br>
启动成功，证明 http 服务已经可以使用，发现还需要把本地文件传到服务器。<br>
默认根目录<code>/var/www/html/</code></p>
<h3 id="使用-ssh-连接服务器">使用 SSH 连接服务器</h3>
<p>尝试了两种方式：PuTTY 和 Xshell（推荐）</p>
<h4 id="xshell-方式">Xshell 方式</h4>
<p>官网下载安装 Xshell 打开，输入 ip 账号密码连接主机。</p>
<p>使用 lrzsz 方式上传下载文件<br>
步骤 1：在服务器安装 lrzsz</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[root@VM_0_6_centos /]# yum -y install lrzsz
</code></pre></td></tr></table>
</div>
</div><p>步骤 2：输入命令<code>rz</code>打开上传窗口（可以选择多个文件。)<br>
使用<code>sz</code>文件名命令可打开从服务器下载文件的保存窗口。</p>
<h3 id="修改-http-配置">修改 HTTP 配置</h3>
<p>1.VIM 编辑器打开配置文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[root@VM_0_6_centos /]# vim /etc/httpd/conf/httpd.conf
</code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>
<p>按<code>I</code>键进入编辑模式</p>
</li>
<li>
<p>找到并修改以下内容</p>
</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">ServerAdmin 管理员邮箱，用于浏览器请求报错时展示
DocumentRoot 访问根目录（默认：/var/www/html），如项目存放在其他地方，可修改为项目存放位置
&lt;Directory &#34;/var/www/html&#34;&gt; 同 DocumentRoot 配置
ServerName 服务器 IP 或 域名 
</code></pre></td></tr></table>
</div>
</div><ol start="4">
<li>
<p>按下 ESC 键输入<code>:wq</code>保存退出</p>
</li>
<li>
<p>重启服务<code>service httpd restart</code></p>
</li>
<li>
<p>打开浏览器，输入地址访问<br>
如：我的项目索引 html 路径为 <code>love/index.html</code>，输入<br>
<code>http://IP 地址或域名/love/index.html</code></p>
</li>
<li>
<p>访问不成功，先检查网络，再查看 http 服务是否开启，最后检查配置；<br>
访问成功，配置完成。</p>
</li>
</ol>
<p>链接：https://www.jianshu.com/p/0b67c6c5d21d</p>
]]></description></item><item><title>linux 编程初体验</title><link>https://lruihao.cn/posts/linux-hello-c/</link><pubDate>Mon, 15 Oct 2018 21:19:27 +0000</pubDate><author>Lruihao</author><guid>https://lruihao.cn/posts/linux-hello-c/</guid><description><![CDATA[<blockquote>
<p>在 Linux 上编译 c 语言文件。</p>
</blockquote>
<h3 id="打开-vim-编辑器">打开 vim 编辑器</h3>
<p>（没有就用 vi, 或者先安装 vim<code>sudo apt-get install vim</code>)</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">$ vim
</code></pre></td></tr></table>
</div>
</div><h3 id="编辑文件">编辑文件</h3>
<p>打开文件编辑器之后编辑文件
</p>
<p>首先按<code>Esc</code>再<code>:</code>进入末行命令<br>
再保存为 hello.c 文件后退出</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">: w hello.c
: q
</code></pre></td></tr></table>
</div>
</div><p>打开目录看看生成的文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">$ ls
</code></pre></td></tr></table>
</div>
</div><h3 id="编译生成可执行文件并执行">编译生成可执行文件并执行</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">$ gcc hello.c -o hello
$ ./hello
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>若权限不够则加可执行权限<code>chmod +x hello</code></p>
]]></description></item><item><title>linux/centos 下的安装 git</title><link>https://lruihao.cn/posts/linux-git/</link><pubDate>Sat, 22 Sep 2018 22:28:45 +0000</pubDate><author>Lruihao</author><guid>https://lruihao.cn/posts/linux-git/</guid><description><![CDATA[<h3 id="下载-git">下载 git</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">wget https://github.com/git/git/archive/v2.14.1.zip
</code></pre></td></tr></table>
</div>
</div><h3 id="安装依赖">安装依赖</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">sudo yum -y install zlib-devel openssl-devel cpio expat-devel gettext-devel curl-devel perl-ExtUtils-CBuilder perl-ExtUtils-MakeMaker
</code></pre></td></tr></table>
</div>
</div><h3 id="解压-git">解压 git</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">unzip v2.14.1.zip
</code></pre></td></tr></table>
</div>
</div><p>注：
unzip 命令用不了，具体步骤如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">#yum list | grep zip/unzip 
#yum install zip
#yum install unzip
</code></pre></td></tr></table>
</div>
</div><p>基本完成，如果在编译的时候出现错误：<code>gcc : error trying to exec 'cc1plus': execvp : No sunch file or directory</code><br>
可以用<code>gcc -v/g++ -v</code> 来查看 gcc 版本，会发现没有安装。安装如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">#yum list | grep gcc
#yum install gcc-c++
#yum install unzip
</code></pre></td></tr></table>
</div>
</div><h3 id="将-git-安装到usrlocal-上">将 git 安装到/usr/local 上</h3>
<p>先进入 git 文件夹<br>
编译<br>
安装</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">cd git-2.14.1
make prefix=/usr/local all
make prefix=/usr/local install
</code></pre></td></tr></table>
</div>
</div><h3 id="验证是否安装完成">验证是否安装完成</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">git --version
</code></pre></td></tr></table>
</div>
</div><p>&hellip;</p>
]]></description></item><item><title>linux 系统进入退出 vim 编辑器及 termux 修改问候语</title><link>https://lruihao.cn/posts/vim/</link><pubDate>Fri, 31 Aug 2018 11:46:39 +0000</pubDate><author>Lruihao</author><guid>https://lruihao.cn/posts/vim/</guid><description><![CDATA[<blockquote>
<p>vim 编辑器是 Linux 系统自带的文本编辑器</p>
</blockquote>
<h2 id="进入-vim-编辑器">进入 VIM 编辑器</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">vim /&lt;路径&gt;/文件名。后缀名
</code></pre></td></tr></table>
</div>
</div><p>如果这个文件，以前是没有的，则为新建，会有提示，否者则没有提示。</p>
<p>进入编辑器后，按&quot;I”，即切换到“INSERT”状态。即插入状态，就可以通过上下左右移动光标，或空格、退格及回车等进行编辑内容了，和 WINDOWS 是一样的了。</p>
<h2 id="退出-vim-编辑器的方法及区别">退出 vim 编辑器的方法及区别</h2>
<p><strong>退出编辑器分为 4 种情况：</strong></p>
<ul>
<li>保存退出</li>
<li>正常退出</li>
<li>不保存退出</li>
<li>强制退出</li>
</ul>
<h3 id="保存退出">保存退出</h3>
<p>先按<code>Esc</code>退出插入状态，再输入英文<code>:</code>, 在下方会出现冒号，等待输入命令，再输入<code>WQ</code>回车就保存了，W,Q 分别对应功能，<br>
W: write , 写入<br>
Q: quit , 退出</p>
<p>保存退出还有二个方法：</p>
<ol>
<li>在最后输入命令时，直接输入&quot;x&quot;，也是一样的，即 X=WQ。</li>
<li>最快捷的方法：按了 ESC 后，直接按 shift+zz，或者切换到大写模式按 ZZ，就可以保存退出了，即是按两下大写的 Z。</li>
</ol>
<p>查看命令</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">cat /&lt;路径&gt;/文件名。后缀名
</code></pre></td></tr></table>
</div>
</div><h3 id="正常退出">正常退出</h3>
<p>正常退出有个前提条件是：打开的文本文件在内容上没有被改动过。<br>
按了<code>ESC</code>后再输入冒号<code>:</code>，在输入命令时，直接输入<code>q</code>。</p>
<h3 id="不保存退出">不保存退出</h3>
<p>很多时候打开了文件，或者修改了一些地方，才发现错了，非常需要不保存退出。<br>
先按<code>ESC</code>，再输入冒号<code>:</code>，在输入命令时，直接输入<code>q!</code>。</p>
<h3 id="强制退出">强制退出</h3>
<p>强制退出。这个实在是不应该做的操作，因为很操蛋！<br>
先按<code>ESC</code>，再按冒号<code>:</code>，在输入命令时，直接输入<code>!</code>，但退出后，会有提示修改内容尚未保存，是否继续！</p>
<h2 id="termux-使用-vim-修改问候语">termux 使用 vim 修改问候语</h2>
<p>没错又是 termux, 就是以前一篇文章提到的“安卓上的 Linux”。<br>
先</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">vim $PREFIX/etc/motd
</code></pre></td></tr></table>
</div>
</div><p>如果报错，好像是要安装 Python <code>pkg install python</code></p>
<p>进入后先使用<code>dd</code>把以前的问候语一行一行删掉，再输入<code>i</code>，进入插入操作，修改你自定义的问候语。之后<code>ESC</code>, 再<code>:WQ</code>退出保存，重启 termux 就可以看到修改后的效果了。如图。</p>
<p></p>
<p>termux 美化 <a href="https://github.com/Cabbagec/termux-ohmyzsh" target="_blank" rel="noopener noreffer">termux-ohmyzsh</a></p>
]]></description></item></channel></rss>